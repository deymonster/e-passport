services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-epassport}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-epassport}
    ports:
      - "0.0.0.0:5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - epassport_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-epassport} -d ${POSTGRES_DB:-epassport}"]
      interval: 5s
      timeout: 5s
      retries: 5


  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_WEBSOCKET_URL: ws://192.168.13.24:4000
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      NEXT_PUBLIC_WEBSOCKET_URL: ws://192.168.13.24:4000
    volumes:
      - ./public/uploads:/app/public/uploads
    env_file:
      - .env
    depends_on:
      db:
          condition: service_healthy
    networks:
      - epassport_network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "registry.npmmirror.com:104.16.24.34"
    restart: unless-stopped

  websocket:
    build:
      context: .
      dockerfile: Dockerfile.websocket
    ports:
      - "0.0.0.0:4000:4000"
    env_file:
      - .env
    depends_on:
      db:
          condition: service_healthy
    networks:
      - epassport_network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "registry.npmmirror.com:104.16.24.34"
    restart: unless-stopped

networks:
  epassport_network:
    driver: bridge

volumes:
  postgres_data:
